/* eslint-disable */
/**
 * Generated utilities for implementing server-side Convex functions.
 *
 * THIS CODE IS AUTOMATICALLY GENERATED.
 *
 * Generated by convex@1.5.1.
 * To regenerate, run `npx convex dev`.
 * @module
 */

import {
  ActionBuilder,
  MutationBuilder,
  QueryBuilder,
  InternalActionBuilder,
  InternalMutationBuilder,
  InternalQueryBuilder,
} from "convex/server"
import type { DataModel } from "./dataModel"

/**
 * Define a query in this Convex app's public API.
 *
 * This function will be allowed to read your Convex database but not modify it.
 *
 * Queries are automatically rerun when the data they access changes.
 *
 * Convex will automatically refresh the results of this query for your users
 * when the underlying data changes.
 *
 * @param func - The query function. It receives a {@link QueryCtx} as its first argument.
 * @returns The defined query. Include this as an `export` to make it accessible.
 */
export const query = new QueryBuilder<DataModel>()

/**
 * Define a mutation in this Convex app's public API.
 *
 * This function will be allowed to modify your Convex database.
 *
 * @param func - The mutation function. It receives a {@link MutationCtx} as its first argument.
 * @returns The defined mutation. Include this as an `export` to make it accessible.
 */
export const mutation = new MutationBuilder<DataModel>()

/**
 * Define an action in this Convex app's public API.
 *
 * This function will not have access to the Convex database but can interact
 * with external services.
 *
 * @param func - The action function. It receives a {@link ActionCtx} as its first argument.
 * @returns The defined action. Include this as an `export` to make it accessible.
 */
export const action = new ActionBuilder<DataModel>()

/**
 * Define an internal query.
 *
 * Internal queries can only be run by other Convex functions, not clients, and
 * can access internal tables.
 *
 * @param func - The query function. It receives a {@link QueryCtx} as its first argument.
 * @returns The defined query. Include this as an `export` to make it accessible.
 */
export const internalQuery = new InternalQueryBuilder<DataModel>()

/**
 * Define an internal mutation.
 *
 * Internal mutations can only be run by other Convex functions, not clients,
 * and can access internal tables.
 *
 * @param func - The mutation function. It receives a {@link MutationCtx} as its first argument.
 * @returns The defined mutation. Include this as an `export` to make it accessible.
 */
export const internalMutation = new InternalMutationBuilder<DataModel>()

/**
 * Define an internal action.
 *
 * Internal actions can only be run by other Convex functions, not clients.
 *
 * @param func - The action function. It receives a {@link ActionCtx} as its first argument.
 * @returns The defined action. Include this as an `export` to make it accessible.
 */
export const internalAction = new InternalActionBuilder<DataModel>()
